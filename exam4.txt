# EXAM FOR WEEK 4
## RULES:
> No interner, no help to each other!
> Make one Folder and place all your work files there
For example:
Exam_4
    -task1.py
    -task2.py
    -task3.py
    -task4.py
    -task5.py
    -task6.py
    -task7.py
    -task8.py
    -task9.py
    -task10.py
    -main.py

> You have 2 hours only from 16:00 to 18:00.
> Who sends their work after 18:00 will get -5 points

1. Write a program to accept a string from the user and display characters that are present at an even index number.
(Напишите программу, принимающую строку от пользователя и отображающую символы, находящиеся под четным индексом.)
    For example, str = "pynative" so you should display ‘p’, ‘n’, ‘t’, ‘v’.

2. Write a function to remove characters from a string starting from zero up to n and return a new string.
    (Напишите функсию для удаления символов из строки, начиная с нуля и до, n и возврата новой строки.)
    For example:
Input                                   input
    remove_chars("pynative", 4)             remove_chars("pynative", 2)
Output                                  Output
    tive                                    native

3. Return the count of a given substring from a string.
(Возврат количества заданной подстроки из строки)
Input
    str_x = "Emma is good developer. Emma is a writer"
    substring = "Emma"
Output
    2

4. Print the following pattern.(Распечатайте следующий шаблон.)
1
2 2
3 3 3
4 4 4 4
5 5 5 5 5
6 6 6 6
7 7 7
8 8
9

5. Find the sum of the series upto n terms(Найдите сумму ряда до n членов).
For example:
    n = 5
    m = 2
Output
    2 + 22 + 222 + 2222 + 22222 = 24690

6. Write a program to create a function show_employee() using the following conditions.
(Напишите программу для создания функции, show_employee()используя следующие условия)

It should accept the employee’s name and salary and display both.
(Он должен принимать имя и зарплату сотрудника и отображать и то, и другое.)
If the salary is missing in the function call then assign default value 9000 to salary.
(Если в вызове функции отсутствует зарплата, присвойте зарплате значение по умолчанию 9000.)
For example:
    showEmployee("Ben", 12000)
    showEmployee("Jessa")
Output:
    Имя: Бен Зарплата: 12000
    Имя: Джесса Зарплата: 9000

7. Return a new set of identical items from two sets.
(Верните новый набор одинаковых предметов из двух наборов.)
Given:
    set1 = {10, 20, 30, 40, 50}
    set2 = {30, 40, 50, 60, 70}
Expected output:
    {40, 50, 30}

8. Write a recursive function is_polindrom(str) to check if a given string is a palindrome.
(Напишите рекурсивную функцию, проверяющую, является ли данная строка палиндромом.)
Input:                          Input:
    banana                          abccba
Output:                         Output:
    False                           True

9. For a cell with coordinates( x , y ) in a table of size M × N , print the coordinates of its neighbors. Neighboring cells are cells that have a common side.
(Для клетки с координатами (x, y) в таблице размером M × N выведите координаты ее соседей. Соседними называются клетки, имеющие общую сторону.)
Given natural numbers M , N , x , y (1 ≤ x ≤ M ≤ 10**9 , 1 ≤ y ≤ N ≤ 10**9 ).
Output pairs of coordinates of this cell's neighbors in the output file in random order.
(В выходной файл выведите пары координат соседей этой клетки в произвольном порядке.)
Input data
    3 3
    2 2
Output
    2 1
    1 2
    2 3
    3 2

10. Merge k sorted lists. You are given an array of k linked-lists lists, each linked-list is sorted in ascending order.
(Объединить k отсортированных списков. Вам дан массив из k списков связанных списков, каждый связанный список отсортирован в порядке возрастания.)
Merge all the linked-lists into one sorted linked-list and return it.

Example 1:
    Input: lists = [[1,4,5],[1,3,4],[2,6]]
    Output: [1,1,2,3,4,4,5,6]
    Explanation: The linked-lists are:
    [
      1->4->5,
      1->3->4,
      2->6
    ]
    merging them into one sorted list:
    1->1->2->3->4->4->5->6